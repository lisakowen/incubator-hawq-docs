---
title: HAWQ Ranger Kerberos Integration
---

<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->

When you have enabled Ranger Authorization for HAWQ, your HAWQ installation includes the Ranger Administrative UI and HAWQ Ranger Plug-in Service.

To enable Kerberos authentication for HAWQ Ranger, you must configure Kerberos support for:

- HAWQ user authentication
- HAWQ resource lookup by the Ranger Administration host during HAWQ policy definition
- HAWQ Ranger Plug-in Service communication with the Ranger Administration host for policy checks

Use the following procedures to configure Kerberos support for your Ranger-authorized HAWQ cluster.

## Prerequisites <a id="kerb_ranger_prereq"></a>

Before you configure Kerberos for your Ranger-authorized HAWQ cluster, ensure that you have:

- Noted the host name or IP address of your Ranger Administration host (\<ranger-admin-node\>) and HAWQ master (\<master\>) nodes.
- Identified an existing Kerberos Key Distribution Center (KDC) or set up your KDC as described in [Install and Configure a Kerberos KDC Server](../clientaccess/kerberos.html#task_setup_kdc).
    - Note the host name or IP address of your KDC (\<kdc-server\>).
    - Note the name of the Kerberos \<realm\> in which your cluster resides.
- Enabled Ranger Authorization for HAWQ. See [Configuring HAWQ to use Ranger Policy Management](ranger-integration-config.html).
- Configured Kerberos authentication for Ranger.
- Configured HAWQ for Kerberos user authentication as described in [Configure Kerberos User Authentication for HAWQ](../clientaccess/kerberos.html#hawq_kerb_cfg).
- Installed Java 1.7.0\_17 or later on all nodes in your cluster. Java 1.7.0_17 is required to use Kerberos-authenticated JDBC on Red Hat Enterprise Linux 6.x or 7.x.
- (Non-OpenJDK Java installations) Installed the Java Cryptography Extension (JCE) on all nodes in your cluster. 
    - If you manage your cluster with Ambari, you installed the JCE on each node before you enabled Kerberos with the Ambari **Kerberos Security Wizard**. 
    - If you manage your cluster from the command line, you must manually install the extension on these systems.


## Configure Ranger for Kerberized HAWQ<a id="ra2hawq_kerb_cfg"></a>

When you define HAWQ Ranger authorization policies, the Ranger Administration Host connects to HAWQ during policy definition to look up policy resource names. When Kerberos user authentication is enabled for HAWQ, you must also kerberize this access.

To configure Ranger access to a HAWQ cluster using Kerberos user authentication, you must:

- Identify an existing, or create a new, HAWQ administrative role for HAWQ resource Ranger lookup
- Create a Kerberos principal for the Ranger lookup role
- Configure Java Security on the Ranger Adminstration Host(s)
- Update the Ranger HAWQ service definition

### Procedure <a id="kerb_ra2hawq_proc"></a>

Perform the following steps to enable the Ranger Administration Host to look up resources in your kerberized HAWQ cluster. You will perform operations on the HAWQ \<master\>, \<ranger-admin-node\>, and \<kdc-server\> nodes.

1. Log in to the HAWQ master node and set up your environment:

    ``` shell
    $ ssh gpadmin@<master>
    gpadmin@master$ . /usr/local/hawq/greenplum_path.sh
    ```

2. Identify an existing or create a new HAWQ administrative role for Ranger resource lookup. For example, to create a new administrative role:

    ``` shell
    gpadmin@master$ psql -c 'CREATE ROLE "rangerlookup_hawq" with LOGIN SUPERUSER;' 
    ```
   
    You may choose a different name for the Ranger lookup role.

3. Log in to the KDC server system and generate a principal for the HAWQ `rangerlookup_hawq` role. Substitute your Kerberos \<realm\>. For example:

    ``` shell
    $ ssh root@<kdc-server>
    root@kdc-server$ kadmin.local -q "addprinc -pw changeme rangerlookup_hawq@REALM‚Äù
    ```
    
    You do not need to generate a keytab file for the `rangerlookup_hawq` principal because you will provide the password in the Ranger Admin UI HAWQ Service definition.

4. Configure Java security on your Ranger Administration host. If you have enabled High Availability for Ranger, perform this configuration on **each** Ranger Administration host in your highly-available cluster.
    
    1. Log in to the Ranger Administration host, and create or add the following to the `/home/ranger/.java.login.config` file:

        ``` shell
        $ ssh root@<ranger-admin-node>
        root@ranger-admin-node$ sudo su - ranger
        ranger@ranger-admin-node$ vi $HOME/.java.login.config
        ```
    
        ``` pre
        pgjdbc {
          com.sun.security.auth.module.Krb5LoginModule required
          doNotPrompt=false
          useTicketCache=true
          debug=true
          client=true;
        };
        ```
    
        ``` shell
        ranger@ranger-admin-node$ exit
        root@ranger-admin-node$ 
        ```

    2. Update the Java security configuration file on the Ranger Administration host. (Your Java home directory may differ.) Uncomment the `login.config.url.1` setting:

        ``` shell
        root@ranger-admin-node$ sudo vi /usr/jdk64/jdk1.8.0_77/jre/lib/security/java.security
        ```

        ``` pre
        #
        # Default login configuration file
        #
        login.config.url.1=file:${user.home}/.java.login.config
        ```

    3. Restart Ranger - ?? VIA COMMAND LINE OR AMBARI ??:

        ``` shell
        root@ranger-admin-node$ ranger-admin stop && ranger-admin start
        ``` 

#### Configure and Verify Connectivity <a id="kerb_ra2hawq_verify"></a>

Perform the following steps to configure and verify Kerberos connectivity between the Ranger Administration host and HAWQ using the Ranger lookup role. 

1. Start the Ranger Admin UI in a supported web browser. The default URL is \<ranger-admin-node\>:6080. 

2. Locate the HAWQ service definition and press the **Edit** button. 

3. Update the applicable **Config Properties** fields:

    **HAWQ User Name*** - The HAWQ Ranger lookup role you identified or created in Step 2 above.  
    **HAWQ User Password*** - The password you assigned to the HAWQ Ranger lookup role principal.  
   
 
3. Click the **Test Connection** button. If you connected successfully, Ranger displays a dialog with the message:

    ``` pre
    Connected Successfully.
    ```

    You successfully configured HAWQ Ranger resource lookup to use Kerberos authentication.

4. **Save** your changes to permanently configure Kerberos authentication for HAWQ Ranger resource lookup.


## Configure HAWQ for Kerberized Ranger<a id="rps2ra_kerb_cfg"></a>

When Ranger Authorization is enabled for HAWQ, the Ranger Plug-in Service fetches policies from the Ranger Administration host. When Ranger is kerberized, you must specifically configure the Ranger Plug-in Service for this communication.

This procedure includes:

- Adding an administrative Ranger user named `postgres`
- Updating HAWQ Ranger Plug-in Service configuration to utilize Kerberos
- ??


### Procedure <a id="kerb_rps2ra_proc"></a>

Perform the following steps to enable XXX:

1. Create a `postgres` Ranger administrative user.

    1. Open the Ranger Admin UI. The default URL is <ranger-admin-node>:6080.
    2. Navigate to **Settings > Users/Groups**.
    3. Press the **Add New User** button.
    4. Fill out the required fields in the **User Detail** dialog:

        **User Name*** - `postgres`.  
        **New Password*** - The user's password.  ?? IS THIS SIGNIFICANT ??  
        **Password Confirm*** - Enter the password again.  
        **First Name*** - The first name of the user.  
        **Select Role*** - Select **Admin**. 

2. Edit the HAWQ Ranger Plug-in Service `rps.properties` configuration file and set the `RPS_AUTH` property to specify Kerberos authentication:

    ``` shell
    gpadmin@master$ vi $GPHOME/ranger/etc/rps.properties
    ```
    
    ``` pre
    RPS_AUTH=kerberos
    ``` 

3. `rps.properties` also includes `RPS_PRINCIPAL` and `RPS_KEYTAB` properties. If unset, the Ranger Plug-in Service uses the Kerberos credentials cache in place for the HAWQ runtime user account (typically `gpadmin`). Set these properties if the default values are not appropriate for your environment.

4. Stop the Ranger Plug-in Service:

    ``` shell
    gpadmin@master$  $GPHOME/ranger/bin/rps.sh stop
    ```

5. Generate a ticket for `postgres@REALM`:

    ``` shell
    gpadmin@master$ kinit -kt /etc/security/keytabs/hawq.service.keytab postgres@REALM
    ```

6. Restart the Ranger Plug-in Service:

    ``` shell
    gpadmin@master$  $GPHOME/ranger/bin/rps.sh start
    ```

#### Configure and Verify Connectivity <a id="kerb_rps2ra_verify"></a>

Perform the following steps to configure and verify Kerberos connectivity between the HAWQ Ranger Plug-in Service and a Kerberized Ranger Admininstration host for policy checking.

1. Start the Ranger Admin UI in a supported web browser. The default URL is \<ranger-admin-node\>:6080. 

2. Locate the HAWQ service definition and press the **Edit** button. 

3. Update the applicable **Config Properties** fields:
  
    **HAWQ Authentication Type** - Select **Kerberos** from the drop-down list.  
    **HAWQ Kerberos Service Name** - `postgres`   

4. **Save** your changes to permanently configure Kerberos authentication for HAWQ Ranger resource lookup.

5. Examine the HAWQ Ranger Plug-in Service log file.
6. Examine the HAWQ Ranger Plug-in Service log file.
